<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        jcdT4yapdIYOXYR//9k=
</value>
  </data>
</root>
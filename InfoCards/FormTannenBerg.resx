<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        ZHCgA8UB/9k=
</value>
  </data>
</root>
<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AABJRU5ErkJggg==
</value>
  </data>
</root>